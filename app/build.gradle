import com.ghl.plugin.ModuleServicePlugin
import com.ghl.plugin.RouterPlugin
import com.ghl.sensors.plugin.PigMethodPlugin

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: RouterPlugin
apply plugin: ModuleServicePlugin
apply plugin: PigMethodPlugin
apply plugin: "org.ajoberstar.grgit"

def app_android = rootProject.ext.android
def app_implementation = rootProject.ext.app_implementation
def mode = liteMode == "true"

configurations {
    profileImplementation {

    }
}

android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileSdkVersion app_android.compileSdkVersion

    defaultConfig {
        applicationId "com.ghl"
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            debuggable true
            testProguardFile 'proguard-test-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }

    //flutter相关声明
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def modules_biz = [
        ':biz_main',
        ':biz_login',
        ':biz_flutter',
        ':biz_user',
        ':biz_track',
        ':androidservice',
        ':opt_track',
        ':hot_fix',
        ':lib_common',
]

dependencies {
    // 更简洁的方式，由于我们config那边定义的是 map，遍历
    app_implementation.each {
        k, v -> implementation v
    }
}