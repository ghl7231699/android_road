// Top-level build file where you can add configuration options common to all sub-projects/modules.
import org.ajoberstar.grgit.Grgit

apply from: "./buildConfig/app_config.gradle"
//apply from: "./buildConfig/upload.gradle"

buildscript {
    ext.kotlin_version = '1.3.72'

    repositories {
        jcenter()
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public'
        }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
//        classpath 'com.xiaozhu:injectcode-gradle-plugin:1.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.ajoberstar.grgit:grgit-gradle:4.1.0"
    }
}


allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven {
            url uri('../snapshotRepo')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//dependencies {
//    implementation project(path: ':plugin')
//}


task checkoutGit() {
//    doLast {
//        println "开始进行下载"
//        clone("main", "git@gitlab.idc.xiaozhu.com:frontend/xuxiake.git", "master")
//    }
}

/**
 * 下载项目源码
 * @param dir
 * @param remote
 * @param branch
 */
void clone(String dir, String remote, String branch) {
    File dirFile = new File("${this.rootDir}/$dir")
    println "现有路径是：$dirFile,是否存在：${dirFile.exists()},rootProject：${this.rootProject.rootDir.path}"
//    if (dirFile.path == this.rootProject.path) {
//        return
//    }
    def grGit
    if (!dirFile.exists()) {
        grGit = Grgit.clone(dir: dir, uri: remote)
        grGit.checkout(branch: branch)
    } else {
        grGit = Grgit.open(dir: "${this.rootDir}")
//        grGit.pull(rebase: false)
    }
}